"b"=>"3"}
h["b"]
h+={"c"=>5}
h["c"]=5
h.default = "#"
h
h[1]
tab = {'А'=>'A','а'=>'а','Б'=>'B','б'=>'b'}
tab["б"]
res += tab['б']
res += tab['а']
res.each {|c| puts c}
h.each {|c| puts c}
h.each_char {|c| puts c}
res.each_char {|c| puts c}
h.has_key 'a'
h.has_key? ','
h.has_key? 'a'
h.has_key? 'b'
h.has_key? 'ф'
h.has_key? 'а'
h.has_key? 'б'
h['b']
tab.has_key? 'б'
tab.has_key? 'b'
ukr_name = 'АпбБр'
res = ''
ukr_name.each_char {|c| tab.has_key ? res += tab[c] : res += c}
ukr_name.each_char {|c| tab.has_key c ? res += tab[c] : res += c}
ukr_name.each_char {|c| tab.has_key(c) ? res += tab[c] : res += c}
ukr_name.each_char {|c| tab.has_key(c)}
tab
tab.has_key 'c'
ukr_name.each_char {|c| tab.has_key? c ? res += tab[c] : res += c}
ukr_name.each_char {|c| tab.has_key?(c) ? res += tab[c] : res += c}
tab = { 'А'=>'A','а'=>'а','Б'=>'B','б'=>'b','В'=>'V','в'=>'v','Г'=>'H','г'=>'h',
            'Ґ'=>'G','ґ'=>'g','Д'=>'D','д'=>'d','Е'=>'E','е'=>'e','Є'=>'Ye','є'=>'ie',
            'Ж'=>'Zh','ж'=>'zh','З'=>'Z','з'=>'z','И'=>'Y','и'=>'y','І'=>'I','і'=>'i',
            'Ї'=>'Yi','ї'=>'i','Й'=>'Y','й'=>'i','К'=>'K','к'=>'k','Л'=>'L','л'=>'l',
            'М'=>'M','м'=>'m','Н'=>'N','н'=>'n','О'=>'O','о'=>'o','П'=>'P','п'=>'p',
            'Р'=>'R','р'=>'r','С'=>'S','с'=>'s','Т'=>'T','т'=>'t','У'=>'U','у'=>'u',
            'Ф'=>'F','ф'=>'f','Х'=>'Kh','х'=>'kh','Ц'=>'Ts','ц'=>'ts','Ч'=>'Ch','ч'=>'ch',
            'Ш'=>'Sh','ш'=>'sh','Щ'=>'Shch','щ'=>'shch','Ю'=>'Yu','ю'=>'iu ','Я'=>'Ya','я'=>'ia'}
tab['р']
ukr_name
puts 'test' 1
puts 'test', 1
print 'test ', 1
ukr_names = 'Терещенко'
ukr_name = 'Терещенко'
куы=ээ
res=''
ukr_name.each_char {|c| res += (tab.has_key?(c) ? tab[c] : c)}
res
if 1<0: 0
if 1<0: {0}
if 1<0 then 0
if 1<0 then 0 end
if -1<0 then 0 end
require 'Date'
require 'date'
DayTime.now + 1.0/24
require 'time'
t = {{'a','1'},{'b','2'}}
t=[1,2,3,4]
t[3]
t = [['a','1'],['b','2']]
t[1][0]
t[1][1]
t[].each {|x| puts x}
t.each {|x| puts x}
t[0].each {|x| puts x}
t.lenght
'123'.lenght
t.length
0.up_to(t.length) do
0.up_to(t.length) do |x|
0.upto(t.length) { |x| puts x}
0.upto(t.length) { |x| puts t[x]}
0.upto(1) { |x| puts t[x]}
puts t[0]
0.upto(t.length-1) { |x| puts t[x]}
puts x
puts "%s - %s" %{t[x][0], t[x][1]}
0.upto(t.length-1) do
|x|
puts "%s - %s" %(t[x][0], t[x][1])
require "date"
DateTime.now

t=DateTime.now
t.to_time
t=DateTime.now.offset 0
def f a
puts a
end
f
f "test"
t
quit
f=File.new('test.txt')
f
f.read-line
f.read
d
f
Dir
Dir './'
Dir['./*']
Dir['./']
Dir['./*']
f=File.new('./test.txt')
f.read
f.each_line
f.each_line {|s| puts s}
f=File.new('./test.txt')
f.each_line {|s| puts s}
f=File.new('./test.txt')
f.each_line {|s| s.comp("\t")}
f.each_line {|s| s.chomp("\t")}
f=File.new('./test.txt')
f.each_line {|s| s.chomp("\t")}
f=File.new('./test.txt')
f.each_line {|s| puts s.chomp("\t")}
'123 456'.chomp(' ')
f=File.new('./test.txt')
f.each_line {|s| puts s.split("\t")}
f=File.new('./test.txt')
f.each_line {|s| u,t =  s.split("\t")}
print "/"%s/" /"%s/"" '123' '456'
print "\"%s\" \"%s\"" '123' '456'
print "\"%s\" \"%s\"" %'123' '456'
print "\"%s\" \"%s\"" %('123', '456')
print "\"%s\" \"%s\"" %('123' '456')
print "\"%s\" \"%s\"" %{'123', '456'}
Kernel.at.exit {
File.open("irb.log","w") do
|f| f << Readline::HISTORY.to_a.join("\n")
end
}
Kernel.at_exit {
File.open("irb.log","w") do
|f| f << Readline::HISTORY.to_a.join("\n")
end
}
exit